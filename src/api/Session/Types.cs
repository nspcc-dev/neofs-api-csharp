// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: session/types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NeoFS.API.v2.Session {

  /// <summary>Holder for reflection information generated from session/types.proto</summary>
  public static partial class TypesReflection {

    #region Descriptor
    /// <summary>File descriptor for session/types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNzZXNzaW9uL3R5cGVzLnByb3RvEhFuZW8uZnMudjIuc2Vzc2lvbhoQcmVm",
            "cy90eXBlcy5wcm90bxoPYWNsL3R5cGVzLnByb3RvIvcBChRPYmplY3RTZXNz",
            "aW9uQ29udGV4dBJACgR2ZXJiGAEgASgOMiwubmVvLmZzLnYyLnNlc3Npb24u",
            "T2JqZWN0U2Vzc2lvbkNvbnRleHQuVmVyYlIEdmVyYhIxCgdhZGRyZXNzGAIg",
            "ASgLMhcubmVvLmZzLnYyLnJlZnMuQWRkcmVzc1IHYWRkcmVzcyJqCgRWZXJi",
            "EhQKEFZFUkJfVU5TUEVDSUZJRUQQABIHCgNQVVQQARIHCgNHRVQQAhIICgRI",
            "RUFEEAMSCgoGU0VBUkNIEAQSCgoGREVMRVRFEAUSCQoFUkFOR0UQBhINCglS",
            "QU5HRUhBU0gQByLUAwoMU2Vzc2lvblRva2VuEjgKBGJvZHkYASABKAsyJC5u",
            "ZW8uZnMudjIuc2Vzc2lvbi5TZXNzaW9uVG9rZW4uQm9keVIEYm9keRI3Cglz",
            "aWduYXR1cmUYAiABKAsyGS5uZW8uZnMudjIucmVmcy5TaWduYXR1cmVSCXNp",
            "Z25hdHVyZRrQAgoEQm9keRIOCgJpZBgBIAEoDFICaWQSMgoIb3duZXJfaWQY",
            "AiABKAsyFy5uZW8uZnMudjIucmVmcy5Pd25lcklEUgdvd25lcklEEk4KCGxp",
            "ZmV0aW1lGAMgASgLMjIubmVvLmZzLnYyLnNlc3Npb24uU2Vzc2lvblRva2Vu",
            "LkJvZHkuVG9rZW5MaWZldGltZVIIbGlmZXRpbWUSHwoLc2Vzc2lvbl9rZXkY",
            "BCABKAxSCnNlc3Npb25LZXkSQQoGb2JqZWN0GAUgASgLMicubmVvLmZzLnYy",
            "LnNlc3Npb24uT2JqZWN0U2Vzc2lvbkNvbnRleHRIAFIGb2JqZWN0GkUKDVRv",
            "a2VuTGlmZXRpbWUSEAoDZXhwGAEgASgEUgNleHASEAoDbmJmGAIgASgEUgNu",
            "YmYSEAoDaWF0GAMgASgEUgNpYXRCCQoHY29udGV4dCIxCgdYSGVhZGVyEhAK",
            "A2tleRgBIAEoCVIDa2V5EhQKBXZhbHVlGAIgASgJUgV2YWx1ZSLqAgoRUmVx",
            "dWVzdE1ldGFIZWFkZXISMQoHdmVyc2lvbhgBIAEoCzIXLm5lby5mcy52Mi5y",
            "ZWZzLlZlcnNpb25SB3ZlcnNpb24SFAoFZXBvY2gYAiABKARSBWVwb2NoEhAK",
            "A3R0bBgDIAEoDVIDdHRsEjcKCXhfaGVhZGVycxgEIAMoCzIaLm5lby5mcy52",
            "Mi5zZXNzaW9uLlhIZWFkZXJSCHhIZWFkZXJzEkQKDXNlc3Npb25fdG9rZW4Y",
            "BSABKAsyHy5uZW8uZnMudjIuc2Vzc2lvbi5TZXNzaW9uVG9rZW5SDHNlc3Np",
            "b25Ub2tlbhI9CgxiZWFyZXJfdG9rZW4YBiABKAsyGi5uZW8uZnMudjIuYWNs",
            "LkJlYXJlclRva2VuUgtiZWFyZXJUb2tlbhI8CgZvcmlnaW4YByABKAsyJC5u",
            "ZW8uZnMudjIuc2Vzc2lvbi5SZXF1ZXN0TWV0YUhlYWRlclIGb3JpZ2luIucB",
            "ChJSZXNwb25zZU1ldGFIZWFkZXISMQoHdmVyc2lvbhgBIAEoCzIXLm5lby5m",
            "cy52Mi5yZWZzLlZlcnNpb25SB3ZlcnNpb24SFAoFZXBvY2gYAiABKARSBWVw",
            "b2NoEhAKA3R0bBgDIAEoDVIDdHRsEjcKCXhfaGVhZGVycxgEIAMoCzIaLm5l",
            "by5mcy52Mi5zZXNzaW9uLlhIZWFkZXJSCHhIZWFkZXJzEj0KBm9yaWdpbhgF",
            "IAEoCzIlLm5lby5mcy52Mi5zZXNzaW9uLlJlc3BvbnNlTWV0YUhlYWRlclIG",
            "b3JpZ2luIqsCChlSZXF1ZXN0VmVyaWZpY2F0aW9uSGVhZGVyEkAKDmJvZHlf",
            "c2lnbmF0dXJlGAEgASgLMhkubmVvLmZzLnYyLnJlZnMuU2lnbmF0dXJlUg1i",
            "b2R5U2lnbmF0dXJlEkAKDm1ldGFfc2lnbmF0dXJlGAIgASgLMhkubmVvLmZz",
            "LnYyLnJlZnMuU2lnbmF0dXJlUg1tZXRhU2lnbmF0dXJlEkQKEG9yaWdpbl9z",
            "aWduYXR1cmUYAyABKAsyGS5uZW8uZnMudjIucmVmcy5TaWduYXR1cmVSD29y",
            "aWdpblNpZ25hdHVyZRJECgZvcmlnaW4YBCABKAsyLC5uZW8uZnMudjIuc2Vz",
            "c2lvbi5SZXF1ZXN0VmVyaWZpY2F0aW9uSGVhZGVyUgZvcmlnaW4irQIKGlJl",
            "c3BvbnNlVmVyaWZpY2F0aW9uSGVhZGVyEkAKDmJvZHlfc2lnbmF0dXJlGAEg",
            "ASgLMhkubmVvLmZzLnYyLnJlZnMuU2lnbmF0dXJlUg1ib2R5U2lnbmF0dXJl",
            "EkAKDm1ldGFfc2lnbmF0dXJlGAIgASgLMhkubmVvLmZzLnYyLnJlZnMuU2ln",
            "bmF0dXJlUg1tZXRhU2lnbmF0dXJlEkQKEG9yaWdpbl9zaWduYXR1cmUYAyAB",
            "KAsyGS5uZW8uZnMudjIucmVmcy5TaWduYXR1cmVSD29yaWdpblNpZ25hdHVy",
            "ZRJFCgZvcmlnaW4YBCABKAsyLS5uZW8uZnMudjIuc2Vzc2lvbi5SZXNwb25z",
            "ZVZlcmlmaWNhdGlvbkhlYWRlclIGb3JpZ2luQlJaOWdpdGh1Yi5jb20vbnNw",
            "Y2MtZGV2L25lb2ZzLWFwaS1nby92Mi9zZXNzaW9uL2dycGM7c2Vzc2lvbqoC",
            "FE5lb0ZTLkFQSS52Mi5TZXNzaW9uYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NeoFS.API.v2.Refs.TypesReflection.Descriptor, global::NeoFS.API.v2.Acl.TypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.Session.ObjectSessionContext), global::NeoFS.API.v2.Session.ObjectSessionContext.Parser, new[]{ "Verb", "Address" }, null, new[]{ typeof(global::NeoFS.API.v2.Session.ObjectSessionContext.Types.Verb) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.Session.SessionToken), global::NeoFS.API.v2.Session.SessionToken.Parser, new[]{ "Body", "Signature" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.Session.SessionToken.Types.Body), global::NeoFS.API.v2.Session.SessionToken.Types.Body.Parser, new[]{ "Id", "OwnerId", "Lifetime", "SessionKey", "Object" }, new[]{ "Context" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.Session.SessionToken.Types.Body.Types.TokenLifetime), global::NeoFS.API.v2.Session.SessionToken.Types.Body.Types.TokenLifetime.Parser, new[]{ "Exp", "Nbf", "Iat" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.Session.XHeader), global::NeoFS.API.v2.Session.XHeader.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.Session.RequestMetaHeader), global::NeoFS.API.v2.Session.RequestMetaHeader.Parser, new[]{ "Version", "Epoch", "Ttl", "XHeaders", "SessionToken", "BearerToken", "Origin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.Session.ResponseMetaHeader), global::NeoFS.API.v2.Session.ResponseMetaHeader.Parser, new[]{ "Version", "Epoch", "Ttl", "XHeaders", "Origin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.Session.RequestVerificationHeader), global::NeoFS.API.v2.Session.RequestVerificationHeader.Parser, new[]{ "BodySignature", "MetaSignature", "OriginSignature", "Origin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.Session.ResponseVerificationHeader), global::NeoFS.API.v2.Session.ResponseVerificationHeader.Parser, new[]{ "BodySignature", "MetaSignature", "OriginSignature", "Origin" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Context information for Session Tokens related to ObjectService requests
  /// </summary>
  public sealed partial class ObjectSessionContext : pb::IMessage<ObjectSessionContext> {
    private static readonly pb::MessageParser<ObjectSessionContext> _parser = new pb::MessageParser<ObjectSessionContext>(() => new ObjectSessionContext());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectSessionContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.v2.Session.TypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectSessionContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectSessionContext(ObjectSessionContext other) : this() {
      verb_ = other.verb_;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectSessionContext Clone() {
      return new ObjectSessionContext(this);
    }

    /// <summary>Field number for the "verb" field.</summary>
    public const int VerbFieldNumber = 1;
    private global::NeoFS.API.v2.Session.ObjectSessionContext.Types.Verb verb_ = global::NeoFS.API.v2.Session.ObjectSessionContext.Types.Verb.Unspecified;
    /// <summary>
    /// Type of request for which the token is issued
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Session.ObjectSessionContext.Types.Verb Verb {
      get { return verb_; }
      set {
        verb_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 2;
    private global::NeoFS.API.v2.Refs.Address address_;
    /// <summary>
    /// Related Object address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectSessionContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectSessionContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Verb != other.Verb) return false;
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Verb != global::NeoFS.API.v2.Session.ObjectSessionContext.Types.Verb.Unspecified) hash ^= Verb.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Verb != global::NeoFS.API.v2.Session.ObjectSessionContext.Types.Verb.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Verb);
      }
      if (address_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Verb != global::NeoFS.API.v2.Session.ObjectSessionContext.Types.Verb.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Verb);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectSessionContext other) {
      if (other == null) {
        return;
      }
      if (other.Verb != global::NeoFS.API.v2.Session.ObjectSessionContext.Types.Verb.Unspecified) {
        Verb = other.Verb;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::NeoFS.API.v2.Refs.Address();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Verb = (global::NeoFS.API.v2.Session.ObjectSessionContext.Types.Verb) input.ReadEnum();
            break;
          }
          case 18: {
            if (address_ == null) {
              Address = new global::NeoFS.API.v2.Refs.Address();
            }
            input.ReadMessage(Address);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ObjectSessionContext message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Object request verbs
      /// </summary>
      public enum Verb {
        /// <summary>
        /// Unknown verb
        /// </summary>
        [pbr::OriginalName("VERB_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Refers to object.Put RPC call
        /// </summary>
        [pbr::OriginalName("PUT")] Put = 1,
        /// <summary>
        /// Refers to object.Get RPC call
        /// </summary>
        [pbr::OriginalName("GET")] Get = 2,
        /// <summary>
        /// Refers to object.Head RPC call
        /// </summary>
        [pbr::OriginalName("HEAD")] Head = 3,
        /// <summary>
        /// Refers to object.Search RPC call
        /// </summary>
        [pbr::OriginalName("SEARCH")] Search = 4,
        /// <summary>
        /// Refers to object.Delete RPC call
        /// </summary>
        [pbr::OriginalName("DELETE")] Delete = 5,
        /// <summary>
        /// Refers to object.GetRange RPC call
        /// </summary>
        [pbr::OriginalName("RANGE")] Range = 6,
        /// <summary>
        /// Refers to object.GetRangeHash RPC call
        /// </summary>
        [pbr::OriginalName("RANGEHASH")] Rangehash = 7,
      }

    }
    #endregion

  }

  /// <summary>
  /// NeoFS Session Token.
  /// </summary>
  public sealed partial class SessionToken : pb::IMessage<SessionToken> {
    private static readonly pb::MessageParser<SessionToken> _parser = new pb::MessageParser<SessionToken>(() => new SessionToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.v2.Session.TypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionToken(SessionToken other) : this() {
      body_ = other.body_ != null ? other.body_.Clone() : null;
      signature_ = other.signature_ != null ? other.signature_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionToken Clone() {
      return new SessionToken(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private global::NeoFS.API.v2.Session.SessionToken.Types.Body body_;
    /// <summary>
    /// Session Token contains the proof of trust between peers to be attached in
    /// requests for further verification. Please see corresponding section of
    /// NeoFS Technical Specification for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Session.SessionToken.Types.Body Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private global::NeoFS.API.v2.Refs.Signature signature_;
    /// <summary>
    /// Signature of `SessionToken` information
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Signature Signature {
      get { return signature_; }
      set {
        signature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Body, other.Body)) return false;
      if (!object.Equals(Signature, other.Signature)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (body_ != null) hash ^= Body.GetHashCode();
      if (signature_ != null) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (body_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Body);
      }
      if (signature_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      if (signature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionToken other) {
      if (other == null) {
        return;
      }
      if (other.body_ != null) {
        if (body_ == null) {
          Body = new global::NeoFS.API.v2.Session.SessionToken.Types.Body();
        }
        Body.MergeFrom(other.Body);
      }
      if (other.signature_ != null) {
        if (signature_ == null) {
          Signature = new global::NeoFS.API.v2.Refs.Signature();
        }
        Signature.MergeFrom(other.Signature);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (body_ == null) {
              Body = new global::NeoFS.API.v2.Session.SessionToken.Types.Body();
            }
            input.ReadMessage(Body);
            break;
          }
          case 18: {
            if (signature_ == null) {
              Signature = new global::NeoFS.API.v2.Refs.Signature();
            }
            input.ReadMessage(Signature);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SessionToken message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Session Token body
      /// </summary>
      public sealed partial class Body : pb::IMessage<Body> {
        private static readonly pb::MessageParser<Body> _parser = new pb::MessageParser<Body>(() => new Body());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Body> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::NeoFS.API.v2.Session.SessionToken.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Body() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Body(Body other) : this() {
          id_ = other.id_;
          ownerId_ = other.ownerId_ != null ? other.ownerId_.Clone() : null;
          lifetime_ = other.lifetime_ != null ? other.lifetime_.Clone() : null;
          sessionKey_ = other.sessionKey_;
          switch (other.ContextCase) {
            case ContextOneofCase.Object:
              Object = other.Object.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Body Clone() {
          return new Body(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private pb::ByteString id_ = pb::ByteString.Empty;
        /// <summary>
        /// Token identifier is a valid UUIDv4 in binary form
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "owner_id" field.</summary>
        public const int OwnerIdFieldNumber = 2;
        private global::NeoFS.API.v2.Refs.OwnerID ownerId_;
        /// <summary>
        /// Identifier of the session initiator
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::NeoFS.API.v2.Refs.OwnerID OwnerId {
          get { return ownerId_; }
          set {
            ownerId_ = value;
          }
        }

        /// <summary>Field number for the "lifetime" field.</summary>
        public const int LifetimeFieldNumber = 3;
        private global::NeoFS.API.v2.Session.SessionToken.Types.Body.Types.TokenLifetime lifetime_;
        /// <summary>
        /// Lifetime of the session
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::NeoFS.API.v2.Session.SessionToken.Types.Body.Types.TokenLifetime Lifetime {
          get { return lifetime_; }
          set {
            lifetime_ = value;
          }
        }

        /// <summary>Field number for the "session_key" field.</summary>
        public const int SessionKeyFieldNumber = 4;
        private pb::ByteString sessionKey_ = pb::ByteString.Empty;
        /// <summary>
        /// Public key used in session
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString SessionKey {
          get { return sessionKey_; }
          set {
            sessionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "object" field.</summary>
        public const int ObjectFieldNumber = 5;
        /// <summary>
        /// ObjectService session context
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::NeoFS.API.v2.Session.ObjectSessionContext Object {
          get { return contextCase_ == ContextOneofCase.Object ? (global::NeoFS.API.v2.Session.ObjectSessionContext) context_ : null; }
          set {
            context_ = value;
            contextCase_ = value == null ? ContextOneofCase.None : ContextOneofCase.Object;
          }
        }

        private object context_;
        /// <summary>Enum of possible cases for the "context" oneof.</summary>
        public enum ContextOneofCase {
          None = 0,
          Object = 5,
        }
        private ContextOneofCase contextCase_ = ContextOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ContextOneofCase ContextCase {
          get { return contextCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearContext() {
          contextCase_ = ContextOneofCase.None;
          context_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Body);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Body other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (!object.Equals(OwnerId, other.OwnerId)) return false;
          if (!object.Equals(Lifetime, other.Lifetime)) return false;
          if (SessionKey != other.SessionKey) return false;
          if (!object.Equals(Object, other.Object)) return false;
          if (ContextCase != other.ContextCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (ownerId_ != null) hash ^= OwnerId.GetHashCode();
          if (lifetime_ != null) hash ^= Lifetime.GetHashCode();
          if (SessionKey.Length != 0) hash ^= SessionKey.GetHashCode();
          if (contextCase_ == ContextOneofCase.Object) hash ^= Object.GetHashCode();
          hash ^= (int) contextCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Id);
          }
          if (ownerId_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(OwnerId);
          }
          if (lifetime_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Lifetime);
          }
          if (SessionKey.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(SessionKey);
          }
          if (contextCase_ == ContextOneofCase.Object) {
            output.WriteRawTag(42);
            output.WriteMessage(Object);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
          }
          if (ownerId_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnerId);
          }
          if (lifetime_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lifetime);
          }
          if (SessionKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(SessionKey);
          }
          if (contextCase_ == ContextOneofCase.Object) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Object);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Body other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.ownerId_ != null) {
            if (ownerId_ == null) {
              OwnerId = new global::NeoFS.API.v2.Refs.OwnerID();
            }
            OwnerId.MergeFrom(other.OwnerId);
          }
          if (other.lifetime_ != null) {
            if (lifetime_ == null) {
              Lifetime = new global::NeoFS.API.v2.Session.SessionToken.Types.Body.Types.TokenLifetime();
            }
            Lifetime.MergeFrom(other.Lifetime);
          }
          if (other.SessionKey.Length != 0) {
            SessionKey = other.SessionKey;
          }
          switch (other.ContextCase) {
            case ContextOneofCase.Object:
              if (Object == null) {
                Object = new global::NeoFS.API.v2.Session.ObjectSessionContext();
              }
              Object.MergeFrom(other.Object);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadBytes();
                break;
              }
              case 18: {
                if (ownerId_ == null) {
                  OwnerId = new global::NeoFS.API.v2.Refs.OwnerID();
                }
                input.ReadMessage(OwnerId);
                break;
              }
              case 26: {
                if (lifetime_ == null) {
                  Lifetime = new global::NeoFS.API.v2.Session.SessionToken.Types.Body.Types.TokenLifetime();
                }
                input.ReadMessage(Lifetime);
                break;
              }
              case 34: {
                SessionKey = input.ReadBytes();
                break;
              }
              case 42: {
                global::NeoFS.API.v2.Session.ObjectSessionContext subBuilder = new global::NeoFS.API.v2.Session.ObjectSessionContext();
                if (contextCase_ == ContextOneofCase.Object) {
                  subBuilder.MergeFrom(Object);
                }
                input.ReadMessage(subBuilder);
                Object = subBuilder;
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Body message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Lifetime parameters of the token. Field names taken from rfc7519.
          /// </summary>
          public sealed partial class TokenLifetime : pb::IMessage<TokenLifetime> {
            private static readonly pb::MessageParser<TokenLifetime> _parser = new pb::MessageParser<TokenLifetime>(() => new TokenLifetime());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<TokenLifetime> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::NeoFS.API.v2.Session.SessionToken.Types.Body.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TokenLifetime() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TokenLifetime(TokenLifetime other) : this() {
              exp_ = other.exp_;
              nbf_ = other.nbf_;
              iat_ = other.iat_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TokenLifetime Clone() {
              return new TokenLifetime(this);
            }

            /// <summary>Field number for the "exp" field.</summary>
            public const int ExpFieldNumber = 1;
            private ulong exp_;
            /// <summary>
            /// Expiration Epoch
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong Exp {
              get { return exp_; }
              set {
                exp_ = value;
              }
            }

            /// <summary>Field number for the "nbf" field.</summary>
            public const int NbfFieldNumber = 2;
            private ulong nbf_;
            /// <summary>
            /// Not valid before Epoch
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong Nbf {
              get { return nbf_; }
              set {
                nbf_ = value;
              }
            }

            /// <summary>Field number for the "iat" field.</summary>
            public const int IatFieldNumber = 3;
            private ulong iat_;
            /// <summary>
            /// Issued at Epoch
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong Iat {
              get { return iat_; }
              set {
                iat_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as TokenLifetime);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(TokenLifetime other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Exp != other.Exp) return false;
              if (Nbf != other.Nbf) return false;
              if (Iat != other.Iat) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Exp != 0UL) hash ^= Exp.GetHashCode();
              if (Nbf != 0UL) hash ^= Nbf.GetHashCode();
              if (Iat != 0UL) hash ^= Iat.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Exp != 0UL) {
                output.WriteRawTag(8);
                output.WriteUInt64(Exp);
              }
              if (Nbf != 0UL) {
                output.WriteRawTag(16);
                output.WriteUInt64(Nbf);
              }
              if (Iat != 0UL) {
                output.WriteRawTag(24);
                output.WriteUInt64(Iat);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Exp != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Exp);
              }
              if (Nbf != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Nbf);
              }
              if (Iat != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Iat);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(TokenLifetime other) {
              if (other == null) {
                return;
              }
              if (other.Exp != 0UL) {
                Exp = other.Exp;
              }
              if (other.Nbf != 0UL) {
                Nbf = other.Nbf;
              }
              if (other.Iat != 0UL) {
                Iat = other.Iat;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Exp = input.ReadUInt64();
                    break;
                  }
                  case 16: {
                    Nbf = input.ReadUInt64();
                    break;
                  }
                  case 24: {
                    Iat = input.ReadUInt64();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Extended headers for Request/Response. May contain any user-defined headers
  /// to be interpreted on application level.
  ///
  /// Key name must be unique valid UTF-8 string. Value can't be empty. Requests or
  /// Responses with duplicated header names or headers with empty values will be
  /// considered invalid.
  ///
  /// There are some "well-known" headers starting with `__NEOFS__` prefix that
  /// affect system behaviour:
  ///
  /// * __NEOFS__NETMAP_EPOCH \
  ///   Netmap epoch to use for object placement calculation. The `value` is string
  ///   encoded `uint64` in decimal presentation. If set to '0' or not set, the
  ///   current epoch only will be used.
  /// * __NEOFS__NETMAP_LOOKUP_DEPTH \
  ///   If object can't be found using current epoch's netmap, this header limits
  ///   how many past epochs back the node can lookup. The `value` is string
  ///   encoded `uint64` in decimal presentation. If set to '0' or not set, the
  ///   current epoch only will be used.
  /// </summary>
  public sealed partial class XHeader : pb::IMessage<XHeader> {
    private static readonly pb::MessageParser<XHeader> _parser = new pb::MessageParser<XHeader>(() => new XHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<XHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.v2.Session.TypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XHeader(XHeader other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XHeader Clone() {
      return new XHeader(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    /// <summary>
    /// Key of the X-Header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    /// <summary>
    /// Value of the X-Header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as XHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(XHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(XHeader other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Meta information attached to the request. When forwarded between peers,
  /// request meta headers are folded in matryoshka style.
  /// </summary>
  public sealed partial class RequestMetaHeader : pb::IMessage<RequestMetaHeader> {
    private static readonly pb::MessageParser<RequestMetaHeader> _parser = new pb::MessageParser<RequestMetaHeader>(() => new RequestMetaHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestMetaHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.v2.Session.TypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMetaHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMetaHeader(RequestMetaHeader other) : this() {
      version_ = other.version_ != null ? other.version_.Clone() : null;
      epoch_ = other.epoch_;
      ttl_ = other.ttl_;
      xHeaders_ = other.xHeaders_.Clone();
      sessionToken_ = other.sessionToken_ != null ? other.sessionToken_.Clone() : null;
      bearerToken_ = other.bearerToken_ != null ? other.bearerToken_.Clone() : null;
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMetaHeader Clone() {
      return new RequestMetaHeader(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private global::NeoFS.API.v2.Refs.Version version_;
    /// <summary>
    /// Peer's API version used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Version Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "epoch" field.</summary>
    public const int EpochFieldNumber = 2;
    private ulong epoch_;
    /// <summary>
    /// Peer's local epoch number. Set to 0 if unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Epoch {
      get { return epoch_; }
      set {
        epoch_ = value;
      }
    }

    /// <summary>Field number for the "ttl" field.</summary>
    public const int TtlFieldNumber = 3;
    private uint ttl_;
    /// <summary>
    /// Maximum number of intermediate nodes in the request route
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ttl {
      get { return ttl_; }
      set {
        ttl_ = value;
      }
    }

    /// <summary>Field number for the "x_headers" field.</summary>
    public const int XHeadersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::NeoFS.API.v2.Session.XHeader> _repeated_xHeaders_codec
        = pb::FieldCodec.ForMessage(34, global::NeoFS.API.v2.Session.XHeader.Parser);
    private readonly pbc::RepeatedField<global::NeoFS.API.v2.Session.XHeader> xHeaders_ = new pbc::RepeatedField<global::NeoFS.API.v2.Session.XHeader>();
    /// <summary>
    /// Request X-Headers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NeoFS.API.v2.Session.XHeader> XHeaders {
      get { return xHeaders_; }
    }

    /// <summary>Field number for the "session_token" field.</summary>
    public const int SessionTokenFieldNumber = 5;
    private global::NeoFS.API.v2.Session.SessionToken sessionToken_;
    /// <summary>
    /// Session token within which the request is sent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Session.SessionToken SessionToken {
      get { return sessionToken_; }
      set {
        sessionToken_ = value;
      }
    }

    /// <summary>Field number for the "bearer_token" field.</summary>
    public const int BearerTokenFieldNumber = 6;
    private global::NeoFS.API.v2.Acl.BearerToken bearerToken_;
    /// <summary>
    /// `BearerToken` with eACL overrides for the request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Acl.BearerToken BearerToken {
      get { return bearerToken_; }
      set {
        bearerToken_ = value;
      }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 7;
    private global::NeoFS.API.v2.Session.RequestMetaHeader origin_;
    /// <summary>
    /// `RequestMetaHeader` of the origin request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Session.RequestMetaHeader Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestMetaHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestMetaHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Version, other.Version)) return false;
      if (Epoch != other.Epoch) return false;
      if (Ttl != other.Ttl) return false;
      if(!xHeaders_.Equals(other.xHeaders_)) return false;
      if (!object.Equals(SessionToken, other.SessionToken)) return false;
      if (!object.Equals(BearerToken, other.BearerToken)) return false;
      if (!object.Equals(Origin, other.Origin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (version_ != null) hash ^= Version.GetHashCode();
      if (Epoch != 0UL) hash ^= Epoch.GetHashCode();
      if (Ttl != 0) hash ^= Ttl.GetHashCode();
      hash ^= xHeaders_.GetHashCode();
      if (sessionToken_ != null) hash ^= SessionToken.GetHashCode();
      if (bearerToken_ != null) hash ^= BearerToken.GetHashCode();
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (version_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Version);
      }
      if (Epoch != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Epoch);
      }
      if (Ttl != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Ttl);
      }
      xHeaders_.WriteTo(output, _repeated_xHeaders_codec);
      if (sessionToken_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SessionToken);
      }
      if (bearerToken_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(BearerToken);
      }
      if (origin_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Origin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (version_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Version);
      }
      if (Epoch != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Epoch);
      }
      if (Ttl != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ttl);
      }
      size += xHeaders_.CalculateSize(_repeated_xHeaders_codec);
      if (sessionToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionToken);
      }
      if (bearerToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BearerToken);
      }
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestMetaHeader other) {
      if (other == null) {
        return;
      }
      if (other.version_ != null) {
        if (version_ == null) {
          Version = new global::NeoFS.API.v2.Refs.Version();
        }
        Version.MergeFrom(other.Version);
      }
      if (other.Epoch != 0UL) {
        Epoch = other.Epoch;
      }
      if (other.Ttl != 0) {
        Ttl = other.Ttl;
      }
      xHeaders_.Add(other.xHeaders_);
      if (other.sessionToken_ != null) {
        if (sessionToken_ == null) {
          SessionToken = new global::NeoFS.API.v2.Session.SessionToken();
        }
        SessionToken.MergeFrom(other.SessionToken);
      }
      if (other.bearerToken_ != null) {
        if (bearerToken_ == null) {
          BearerToken = new global::NeoFS.API.v2.Acl.BearerToken();
        }
        BearerToken.MergeFrom(other.BearerToken);
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          Origin = new global::NeoFS.API.v2.Session.RequestMetaHeader();
        }
        Origin.MergeFrom(other.Origin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (version_ == null) {
              Version = new global::NeoFS.API.v2.Refs.Version();
            }
            input.ReadMessage(Version);
            break;
          }
          case 16: {
            Epoch = input.ReadUInt64();
            break;
          }
          case 24: {
            Ttl = input.ReadUInt32();
            break;
          }
          case 34: {
            xHeaders_.AddEntriesFrom(input, _repeated_xHeaders_codec);
            break;
          }
          case 42: {
            if (sessionToken_ == null) {
              SessionToken = new global::NeoFS.API.v2.Session.SessionToken();
            }
            input.ReadMessage(SessionToken);
            break;
          }
          case 50: {
            if (bearerToken_ == null) {
              BearerToken = new global::NeoFS.API.v2.Acl.BearerToken();
            }
            input.ReadMessage(BearerToken);
            break;
          }
          case 58: {
            if (origin_ == null) {
              Origin = new global::NeoFS.API.v2.Session.RequestMetaHeader();
            }
            input.ReadMessage(Origin);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Information about the response
  /// </summary>
  public sealed partial class ResponseMetaHeader : pb::IMessage<ResponseMetaHeader> {
    private static readonly pb::MessageParser<ResponseMetaHeader> _parser = new pb::MessageParser<ResponseMetaHeader>(() => new ResponseMetaHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseMetaHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.v2.Session.TypesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseMetaHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseMetaHeader(ResponseMetaHeader other) : this() {
      version_ = other.version_ != null ? other.version_.Clone() : null;
      epoch_ = other.epoch_;
      ttl_ = other.ttl_;
      xHeaders_ = other.xHeaders_.Clone();
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseMetaHeader Clone() {
      return new ResponseMetaHeader(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private global::NeoFS.API.v2.Refs.Version version_;
    /// <summary>
    /// Peer's API version used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Version Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "epoch" field.</summary>
    public const int EpochFieldNumber = 2;
    private ulong epoch_;
    /// <summary>
    /// Peer's local epoch number
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Epoch {
      get { return epoch_; }
      set {
        epoch_ = value;
      }
    }

    /// <summary>Field number for the "ttl" field.</summary>
    public const int TtlFieldNumber = 3;
    private uint ttl_;
    /// <summary>
    /// Maximum number of intermediate nodes in the request route
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ttl {
      get { return ttl_; }
      set {
        ttl_ = value;
      }
    }

    /// <summary>Field number for the "x_headers" field.</summary>
    public const int XHeadersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::NeoFS.API.v2.Session.XHeader> _repeated_xHeaders_codec
        = pb::FieldCodec.ForMessage(34, global::NeoFS.API.v2.Session.XHeader.Parser);
    private readonly pbc::RepeatedField<global::NeoFS.API.v2.Session.XHeader> xHeaders_ = new pbc::RepeatedField<global::NeoFS.API.v2.Session.XHeader>();
    /// <summary>
    /// Response X-Headers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NeoFS.API.v2.Session.XHeader> XHeaders {
      get { return xHeaders_; }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 5;
    private global::NeoFS.API.v2.Session.ResponseMetaHeader origin_;
    /// <summary>
    /// `ResponseMetaHeader` of the origin request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Session.ResponseMetaHeader Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseMetaHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseMetaHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Version, other.Version)) return false;
      if (Epoch != other.Epoch) return false;
      if (Ttl != other.Ttl) return false;
      if(!xHeaders_.Equals(other.xHeaders_)) return false;
      if (!object.Equals(Origin, other.Origin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (version_ != null) hash ^= Version.GetHashCode();
      if (Epoch != 0UL) hash ^= Epoch.GetHashCode();
      if (Ttl != 0) hash ^= Ttl.GetHashCode();
      hash ^= xHeaders_.GetHashCode();
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (version_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Version);
      }
      if (Epoch != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Epoch);
      }
      if (Ttl != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Ttl);
      }
      xHeaders_.WriteTo(output, _repeated_xHeaders_codec);
      if (origin_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Origin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (version_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Version);
      }
      if (Epoch != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Epoch);
      }
      if (Ttl != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ttl);
      }
      size += xHeaders_.CalculateSize(_repeated_xHeaders_codec);
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseMetaHeader other) {
      if (other == null) {
        return;
      }
      if (other.version_ != null) {
        if (version_ == null) {
          Version = new global::NeoFS.API.v2.Refs.Version();
        }
        Version.MergeFrom(other.Version);
      }
      if (other.Epoch != 0UL) {
        Epoch = other.Epoch;
      }
      if (other.Ttl != 0) {
        Ttl = other.Ttl;
      }
      xHeaders_.Add(other.xHeaders_);
      if (other.origin_ != null) {
        if (origin_ == null) {
          Origin = new global::NeoFS.API.v2.Session.ResponseMetaHeader();
        }
        Origin.MergeFrom(other.Origin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (version_ == null) {
              Version = new global::NeoFS.API.v2.Refs.Version();
            }
            input.ReadMessage(Version);
            break;
          }
          case 16: {
            Epoch = input.ReadUInt64();
            break;
          }
          case 24: {
            Ttl = input.ReadUInt32();
            break;
          }
          case 34: {
            xHeaders_.AddEntriesFrom(input, _repeated_xHeaders_codec);
            break;
          }
          case 42: {
            if (origin_ == null) {
              Origin = new global::NeoFS.API.v2.Session.ResponseMetaHeader();
            }
            input.ReadMessage(Origin);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Verification info for request signed by all intermediate nodes.
  /// </summary>
  public sealed partial class RequestVerificationHeader : pb::IMessage<RequestVerificationHeader> {
    private static readonly pb::MessageParser<RequestVerificationHeader> _parser = new pb::MessageParser<RequestVerificationHeader>(() => new RequestVerificationHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestVerificationHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.v2.Session.TypesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestVerificationHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestVerificationHeader(RequestVerificationHeader other) : this() {
      bodySignature_ = other.bodySignature_ != null ? other.bodySignature_.Clone() : null;
      metaSignature_ = other.metaSignature_ != null ? other.metaSignature_.Clone() : null;
      originSignature_ = other.originSignature_ != null ? other.originSignature_.Clone() : null;
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestVerificationHeader Clone() {
      return new RequestVerificationHeader(this);
    }

    /// <summary>Field number for the "body_signature" field.</summary>
    public const int BodySignatureFieldNumber = 1;
    private global::NeoFS.API.v2.Refs.Signature bodySignature_;
    /// <summary>
    /// Request Body signature. Should be generated once by request initiator.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Signature BodySignature {
      get { return bodySignature_; }
      set {
        bodySignature_ = value;
      }
    }

    /// <summary>Field number for the "meta_signature" field.</summary>
    public const int MetaSignatureFieldNumber = 2;
    private global::NeoFS.API.v2.Refs.Signature metaSignature_;
    /// <summary>
    /// Request Meta signature is added and signed by each intermediate node
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Signature MetaSignature {
      get { return metaSignature_; }
      set {
        metaSignature_ = value;
      }
    }

    /// <summary>Field number for the "origin_signature" field.</summary>
    public const int OriginSignatureFieldNumber = 3;
    private global::NeoFS.API.v2.Refs.Signature originSignature_;
    /// <summary>
    /// Signature of previous hops
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Signature OriginSignature {
      get { return originSignature_; }
      set {
        originSignature_ = value;
      }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 4;
    private global::NeoFS.API.v2.Session.RequestVerificationHeader origin_;
    /// <summary>
    /// Chain of previous hops signatures
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Session.RequestVerificationHeader Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestVerificationHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestVerificationHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BodySignature, other.BodySignature)) return false;
      if (!object.Equals(MetaSignature, other.MetaSignature)) return false;
      if (!object.Equals(OriginSignature, other.OriginSignature)) return false;
      if (!object.Equals(Origin, other.Origin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bodySignature_ != null) hash ^= BodySignature.GetHashCode();
      if (metaSignature_ != null) hash ^= MetaSignature.GetHashCode();
      if (originSignature_ != null) hash ^= OriginSignature.GetHashCode();
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bodySignature_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BodySignature);
      }
      if (metaSignature_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MetaSignature);
      }
      if (originSignature_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OriginSignature);
      }
      if (origin_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Origin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bodySignature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BodySignature);
      }
      if (metaSignature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetaSignature);
      }
      if (originSignature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginSignature);
      }
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestVerificationHeader other) {
      if (other == null) {
        return;
      }
      if (other.bodySignature_ != null) {
        if (bodySignature_ == null) {
          BodySignature = new global::NeoFS.API.v2.Refs.Signature();
        }
        BodySignature.MergeFrom(other.BodySignature);
      }
      if (other.metaSignature_ != null) {
        if (metaSignature_ == null) {
          MetaSignature = new global::NeoFS.API.v2.Refs.Signature();
        }
        MetaSignature.MergeFrom(other.MetaSignature);
      }
      if (other.originSignature_ != null) {
        if (originSignature_ == null) {
          OriginSignature = new global::NeoFS.API.v2.Refs.Signature();
        }
        OriginSignature.MergeFrom(other.OriginSignature);
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          Origin = new global::NeoFS.API.v2.Session.RequestVerificationHeader();
        }
        Origin.MergeFrom(other.Origin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (bodySignature_ == null) {
              BodySignature = new global::NeoFS.API.v2.Refs.Signature();
            }
            input.ReadMessage(BodySignature);
            break;
          }
          case 18: {
            if (metaSignature_ == null) {
              MetaSignature = new global::NeoFS.API.v2.Refs.Signature();
            }
            input.ReadMessage(MetaSignature);
            break;
          }
          case 26: {
            if (originSignature_ == null) {
              OriginSignature = new global::NeoFS.API.v2.Refs.Signature();
            }
            input.ReadMessage(OriginSignature);
            break;
          }
          case 34: {
            if (origin_ == null) {
              Origin = new global::NeoFS.API.v2.Session.RequestVerificationHeader();
            }
            input.ReadMessage(Origin);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Verification info for response signed by all intermediate nodes
  /// </summary>
  public sealed partial class ResponseVerificationHeader : pb::IMessage<ResponseVerificationHeader> {
    private static readonly pb::MessageParser<ResponseVerificationHeader> _parser = new pb::MessageParser<ResponseVerificationHeader>(() => new ResponseVerificationHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseVerificationHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.v2.Session.TypesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseVerificationHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseVerificationHeader(ResponseVerificationHeader other) : this() {
      bodySignature_ = other.bodySignature_ != null ? other.bodySignature_.Clone() : null;
      metaSignature_ = other.metaSignature_ != null ? other.metaSignature_.Clone() : null;
      originSignature_ = other.originSignature_ != null ? other.originSignature_.Clone() : null;
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseVerificationHeader Clone() {
      return new ResponseVerificationHeader(this);
    }

    /// <summary>Field number for the "body_signature" field.</summary>
    public const int BodySignatureFieldNumber = 1;
    private global::NeoFS.API.v2.Refs.Signature bodySignature_;
    /// <summary>
    /// Response Body signature. Should be generated once by answering node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Signature BodySignature {
      get { return bodySignature_; }
      set {
        bodySignature_ = value;
      }
    }

    /// <summary>Field number for the "meta_signature" field.</summary>
    public const int MetaSignatureFieldNumber = 2;
    private global::NeoFS.API.v2.Refs.Signature metaSignature_;
    /// <summary>
    /// Response Meta signature is added and signed by each intermediate node
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Signature MetaSignature {
      get { return metaSignature_; }
      set {
        metaSignature_ = value;
      }
    }

    /// <summary>Field number for the "origin_signature" field.</summary>
    public const int OriginSignatureFieldNumber = 3;
    private global::NeoFS.API.v2.Refs.Signature originSignature_;
    /// <summary>
    /// Signature of previous hops
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Signature OriginSignature {
      get { return originSignature_; }
      set {
        originSignature_ = value;
      }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 4;
    private global::NeoFS.API.v2.Session.ResponseVerificationHeader origin_;
    /// <summary>
    /// Chain of previous hops signatures
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Session.ResponseVerificationHeader Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseVerificationHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseVerificationHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BodySignature, other.BodySignature)) return false;
      if (!object.Equals(MetaSignature, other.MetaSignature)) return false;
      if (!object.Equals(OriginSignature, other.OriginSignature)) return false;
      if (!object.Equals(Origin, other.Origin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bodySignature_ != null) hash ^= BodySignature.GetHashCode();
      if (metaSignature_ != null) hash ^= MetaSignature.GetHashCode();
      if (originSignature_ != null) hash ^= OriginSignature.GetHashCode();
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bodySignature_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BodySignature);
      }
      if (metaSignature_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MetaSignature);
      }
      if (originSignature_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OriginSignature);
      }
      if (origin_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Origin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bodySignature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BodySignature);
      }
      if (metaSignature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetaSignature);
      }
      if (originSignature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginSignature);
      }
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseVerificationHeader other) {
      if (other == null) {
        return;
      }
      if (other.bodySignature_ != null) {
        if (bodySignature_ == null) {
          BodySignature = new global::NeoFS.API.v2.Refs.Signature();
        }
        BodySignature.MergeFrom(other.BodySignature);
      }
      if (other.metaSignature_ != null) {
        if (metaSignature_ == null) {
          MetaSignature = new global::NeoFS.API.v2.Refs.Signature();
        }
        MetaSignature.MergeFrom(other.MetaSignature);
      }
      if (other.originSignature_ != null) {
        if (originSignature_ == null) {
          OriginSignature = new global::NeoFS.API.v2.Refs.Signature();
        }
        OriginSignature.MergeFrom(other.OriginSignature);
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          Origin = new global::NeoFS.API.v2.Session.ResponseVerificationHeader();
        }
        Origin.MergeFrom(other.Origin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (bodySignature_ == null) {
              BodySignature = new global::NeoFS.API.v2.Refs.Signature();
            }
            input.ReadMessage(BodySignature);
            break;
          }
          case 18: {
            if (metaSignature_ == null) {
              MetaSignature = new global::NeoFS.API.v2.Refs.Signature();
            }
            input.ReadMessage(MetaSignature);
            break;
          }
          case 26: {
            if (originSignature_ == null) {
              OriginSignature = new global::NeoFS.API.v2.Refs.Signature();
            }
            input.ReadMessage(OriginSignature);
            break;
          }
          case 34: {
            if (origin_ == null) {
              Origin = new global::NeoFS.API.v2.Session.ResponseVerificationHeader();
            }
            input.ReadMessage(Origin);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
