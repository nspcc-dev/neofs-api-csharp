// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: storagegroup/types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NeoFS.API.v2.StorageGroup {

  /// <summary>Holder for reflection information generated from storagegroup/types.proto</summary>
  public static partial class TypesReflection {

    #region Descriptor
    /// <summary>File descriptor for storagegroup/types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhzdG9yYWdlZ3JvdXAvdHlwZXMucHJvdG8SFm5lby5mcy52Mi5zdG9yYWdl",
            "Z3JvdXAaEHJlZnMvdHlwZXMucHJvdG8i4gEKDFN0b3JhZ2VHcm91cBIwChR2",
            "YWxpZGF0aW9uX2RhdGFfc2l6ZRgBIAEoBFISdmFsaWRhdGlvbkRhdGFTaXpl",
            "EkEKD3ZhbGlkYXRpb25faGFzaBgCIAEoCzIYLm5lby5mcy52Mi5yZWZzLkNo",
            "ZWNrc3VtUg52YWxpZGF0aW9uSGFzaBIpChBleHBpcmF0aW9uX2Vwb2NoGAMg",
            "ASgEUg9leHBpcmF0aW9uRXBvY2gSMgoHbWVtYmVycxgEIAMoCzIYLm5lby5m",
            "cy52Mi5yZWZzLk9iamVjdElEUgdtZW1iZXJzQmFaQ2dpdGh1Yi5jb20vbnNw",
            "Y2MtZGV2L25lb2ZzLWFwaS1nby92Mi9zdG9yYWdlZ3JvdXAvZ3JwYztzdG9y",
            "YWdlZ3JvdXCqAhlOZW9GUy5BUEkudjIuU3RvcmFnZUdyb3VwYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NeoFS.API.v2.Refs.TypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.StorageGroup.StorageGroup), global::NeoFS.API.v2.StorageGroup.StorageGroup.Parser, new[]{ "ValidationDataSize", "ValidationHash", "ExpirationEpoch", "Members" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// StorageGroup keeps verification information for Data Audit sessions. Objects
  /// that require payed storage guaranties are gathered in `StorageGroups` with
  /// additional information used for proof of storage. `StorageGroup` only
  /// contains objects from the same container.
  /// </summary>
  public sealed partial class StorageGroup : pb::IMessage<StorageGroup> {
    private static readonly pb::MessageParser<StorageGroup> _parser = new pb::MessageParser<StorageGroup>(() => new StorageGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorageGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.v2.StorageGroup.TypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageGroup(StorageGroup other) : this() {
      validationDataSize_ = other.validationDataSize_;
      validationHash_ = other.validationHash_ != null ? other.validationHash_.Clone() : null;
      expirationEpoch_ = other.expirationEpoch_;
      members_ = other.members_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageGroup Clone() {
      return new StorageGroup(this);
    }

    /// <summary>Field number for the "validation_data_size" field.</summary>
    public const int ValidationDataSizeFieldNumber = 1;
    private ulong validationDataSize_;
    /// <summary>
    /// Total size of the payloads of objects in the storage group
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ValidationDataSize {
      get { return validationDataSize_; }
      set {
        validationDataSize_ = value;
      }
    }

    /// <summary>Field number for the "validation_hash" field.</summary>
    public const int ValidationHashFieldNumber = 2;
    private global::NeoFS.API.v2.Refs.Checksum validationHash_;
    /// <summary>
    /// Homomorphic hash from the concatenation of the payloads of the storage
    /// group members. The order of concatenation is the same as the order of the
    /// members in the `members` field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Checksum ValidationHash {
      get { return validationHash_; }
      set {
        validationHash_ = value;
      }
    }

    /// <summary>Field number for the "expiration_epoch" field.</summary>
    public const int ExpirationEpochFieldNumber = 3;
    private ulong expirationEpoch_;
    /// <summary>
    /// Last NeoFS epoch number of the storage group lifetime
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ExpirationEpoch {
      get { return expirationEpoch_; }
      set {
        expirationEpoch_ = value;
      }
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::NeoFS.API.v2.Refs.ObjectID> _repeated_members_codec
        = pb::FieldCodec.ForMessage(34, global::NeoFS.API.v2.Refs.ObjectID.Parser);
    private readonly pbc::RepeatedField<global::NeoFS.API.v2.Refs.ObjectID> members_ = new pbc::RepeatedField<global::NeoFS.API.v2.Refs.ObjectID>();
    /// <summary>
    /// Strictly ordered list of storage group member objects
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NeoFS.API.v2.Refs.ObjectID> Members {
      get { return members_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorageGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorageGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ValidationDataSize != other.ValidationDataSize) return false;
      if (!object.Equals(ValidationHash, other.ValidationHash)) return false;
      if (ExpirationEpoch != other.ExpirationEpoch) return false;
      if(!members_.Equals(other.members_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ValidationDataSize != 0UL) hash ^= ValidationDataSize.GetHashCode();
      if (validationHash_ != null) hash ^= ValidationHash.GetHashCode();
      if (ExpirationEpoch != 0UL) hash ^= ExpirationEpoch.GetHashCode();
      hash ^= members_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ValidationDataSize != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ValidationDataSize);
      }
      if (validationHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ValidationHash);
      }
      if (ExpirationEpoch != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ExpirationEpoch);
      }
      members_.WriteTo(output, _repeated_members_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ValidationDataSize != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ValidationDataSize);
      }
      if (validationHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValidationHash);
      }
      if (ExpirationEpoch != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ExpirationEpoch);
      }
      size += members_.CalculateSize(_repeated_members_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorageGroup other) {
      if (other == null) {
        return;
      }
      if (other.ValidationDataSize != 0UL) {
        ValidationDataSize = other.ValidationDataSize;
      }
      if (other.validationHash_ != null) {
        if (validationHash_ == null) {
          ValidationHash = new global::NeoFS.API.v2.Refs.Checksum();
        }
        ValidationHash.MergeFrom(other.ValidationHash);
      }
      if (other.ExpirationEpoch != 0UL) {
        ExpirationEpoch = other.ExpirationEpoch;
      }
      members_.Add(other.members_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ValidationDataSize = input.ReadUInt64();
            break;
          }
          case 18: {
            if (validationHash_ == null) {
              ValidationHash = new global::NeoFS.API.v2.Refs.Checksum();
            }
            input.ReadMessage(ValidationHash);
            break;
          }
          case 24: {
            ExpirationEpoch = input.ReadUInt64();
            break;
          }
          case 34: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
