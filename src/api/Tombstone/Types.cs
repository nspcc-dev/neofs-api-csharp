// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tombstone/types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NeoFS.API.v2.Tombstone {

  /// <summary>Holder for reflection information generated from tombstone/types.proto</summary>
  public static partial class TypesReflection {

    #region Descriptor
    /// <summary>File descriptor for tombstone/types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChV0b21ic3RvbmUvdHlwZXMucHJvdG8SE25lby5mcy52Mi50b21ic3RvbmUa",
            "EHJlZnMvdHlwZXMucHJvdG8ihQEKCVRvbWJzdG9uZRIpChBleHBpcmF0aW9u",
            "X2Vwb2NoGAEgASgEUg9leHBpcmF0aW9uRXBvY2gSGQoIc3BsaXRfaWQYAiAB",
            "KAxSB3NwbGl0SUQSMgoHbWVtYmVycxgDIAMoCzIYLm5lby5mcy52Mi5yZWZz",
            "Lk9iamVjdElEUgdtZW1iZXJzQlhaPWdpdGh1Yi5jb20vbnNwY2MtZGV2L25l",
            "b2ZzLWFwaS1nby92Mi90b21ic3RvbmUvZ3JwYzt0b21ic3RvbmWqAhZOZW9G",
            "Uy5BUEkudjIuVG9tYnN0b25lYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NeoFS.API.v2.Refs.TypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.Tombstone.Tombstone), global::NeoFS.API.v2.Tombstone.Tombstone.Parser, new[]{ "ExpirationEpoch", "SplitId", "Members" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Tombstone keeps record of deleted objects for few epochs until they are
  /// purged from the NeoFS network.
  /// </summary>
  public sealed partial class Tombstone : pb::IMessage<Tombstone> {
    private static readonly pb::MessageParser<Tombstone> _parser = new pb::MessageParser<Tombstone>(() => new Tombstone());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tombstone> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.v2.Tombstone.TypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tombstone() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tombstone(Tombstone other) : this() {
      expirationEpoch_ = other.expirationEpoch_;
      splitId_ = other.splitId_;
      members_ = other.members_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tombstone Clone() {
      return new Tombstone(this);
    }

    /// <summary>Field number for the "expiration_epoch" field.</summary>
    public const int ExpirationEpochFieldNumber = 1;
    private ulong expirationEpoch_;
    /// <summary>
    /// Last NeoFS epoch number of the tombstone lifetime. It's set by tombstone
    /// creator depending on current NeoFS network settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ExpirationEpoch {
      get { return expirationEpoch_; }
      set {
        expirationEpoch_ = value;
      }
    }

    /// <summary>Field number for the "split_id" field.</summary>
    public const int SplitIdFieldNumber = 2;
    private pb::ByteString splitId_ = pb::ByteString.Empty;
    /// <summary>
    /// 16 byte UUID used to identify the split object hierarchy parts. Must be
    /// unique inside container. All objects participating in the split must
    /// have the same `split_id` value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SplitId {
      get { return splitId_; }
      set {
        splitId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::NeoFS.API.v2.Refs.ObjectID> _repeated_members_codec
        = pb::FieldCodec.ForMessage(26, global::NeoFS.API.v2.Refs.ObjectID.Parser);
    private readonly pbc::RepeatedField<global::NeoFS.API.v2.Refs.ObjectID> members_ = new pbc::RepeatedField<global::NeoFS.API.v2.Refs.ObjectID>();
    /// <summary>
    /// List of objects to be deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NeoFS.API.v2.Refs.ObjectID> Members {
      get { return members_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tombstone);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tombstone other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExpirationEpoch != other.ExpirationEpoch) return false;
      if (SplitId != other.SplitId) return false;
      if(!members_.Equals(other.members_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExpirationEpoch != 0UL) hash ^= ExpirationEpoch.GetHashCode();
      if (SplitId.Length != 0) hash ^= SplitId.GetHashCode();
      hash ^= members_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExpirationEpoch != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ExpirationEpoch);
      }
      if (SplitId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(SplitId);
      }
      members_.WriteTo(output, _repeated_members_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExpirationEpoch != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ExpirationEpoch);
      }
      if (SplitId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SplitId);
      }
      size += members_.CalculateSize(_repeated_members_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tombstone other) {
      if (other == null) {
        return;
      }
      if (other.ExpirationEpoch != 0UL) {
        ExpirationEpoch = other.ExpirationEpoch;
      }
      if (other.SplitId.Length != 0) {
        SplitId = other.SplitId;
      }
      members_.Add(other.members_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ExpirationEpoch = input.ReadUInt64();
            break;
          }
          case 18: {
            SplitId = input.ReadBytes();
            break;
          }
          case 26: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
